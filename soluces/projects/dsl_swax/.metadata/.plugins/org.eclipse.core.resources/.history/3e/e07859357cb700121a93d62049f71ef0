package simulation.gui

import scala.collection.mutable.PriorityQueue
import simulation.api.Stats
import simulation.api.Population
import org.jfree.data.general.DefaultPieDataset
import org.jfree.chart.ChartFactory
import org.jfree.data.xy.XYDataset
import org.jfree.data.xy.XYSeries
import scala.collection.mutable.Queue
import org.jfree.data.xy.XYSeriesCollection
import org.jfree.chart.plot.PlotOrientation
import org.jfree.chart.ChartPanel
import simulation.api.Population
import javax.swing.JFrame
import javax.swing.JPanel
import simulation.SimModel
import org.jfree.data.general.SeriesChangeListener
import org.jfree.data.general.SeriesChangeEvent

class SimFrame(val model: SimModel) {
  val frame: JFrame = new JFrame()
  val subscribedPanel: JPanel = new JPanel()
  val xySerieCollection = new XYSeriesCollection(model.statsRecord)
  val chart = ChartFactory.createXYLineChart("title",
    "xAxisLabel", "yAxisLabel", xySerieCollection, PlotOrientation.VERTICAL, false, false, false)
  val chartPanel = new ChartPanel(chart);
  subscribedPanel.add(chartPanel).setVisible(true)
  frame.add(subscribedPanel)
  frame.setVisible(true)
  frame.pack()
  frame.setLocationRelativeTo(null)
  frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

  model.statsRecord.addChangeListener(new SeriesChangeListener() {
    def seriesChanged(event: SeriesChangeEvent) {
    	
    }
  })
}